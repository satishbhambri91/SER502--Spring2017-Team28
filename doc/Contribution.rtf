{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf820
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww25400\viewh13720\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs28 \cf0 Contribution of Team Members
\fs24  \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\b \cf0 Milestone 1:
\b0 \
Creating own Github Account was individually done by each member.\
Satish Bhambri and Prashanth Radhakrishnan created the GitHub Repository for milestone 1.\
\

\b Milestone 2:
\b0 \
Vibhuti Tripathi : Prepared a rough draft of the grammar and converted into EBNF format.\
Satish Bhambri : Prepared a rough draft of the grammar and converted into EBNF format.\
Prashanth Radhakrishnan : Getting familiar with ANTLR and converting the EBNF grammar into a format acceptable by ANTLR.\
Jiuxu Chen : Getting familiar with ANTLR and converting the EBNF grammar into a format acceptable by ANTLR.\
\
Documentation : \
Vibhuti Tripathi: Prepared Documentation for lexical analysis and symbol table.\
Satish Bhambri : Prepared Documentation for semantic and syntactic analysis.\
Prashanth Radhakrishnan: Prepared Documentation for Runtime Environment and Intermediate Code Generation.\
Jiuxu Chen: Prepared Contribution.txt\
\

\b \
Milestone 3:
\b0 \
We\'92ve planned to equally divide the work between all the team members so that everyone has equal idea of all the phases of compiler design.\
We had to make some minor changes in the grammar that we submitted and implement some new functionalities. This was taken care by Prashanth and Jiuxu.\
\
Intermediate Code Generation was done using ANTLR in Java which was done by Prashanth and Jiuxu.\
- Prashanth  and Jiuxu worked on extending the Nihao Walker Class and appending the strings and thus generating the intermediate code.\
\
The runtime environment was built in Python  on which Satish and Vibhuti worked. \
- Satish Implemented the The stack, the While Iteration Loop and the basic design of the interpreter and arithmetic operations using stack.\
- Vibhuti implemented the lexer method which checked for the validity of the token stream passed, If and Else construct and the basic arithmetic operations.\
\
The work was fairly divided in all the milestones.\
\
\
\
}